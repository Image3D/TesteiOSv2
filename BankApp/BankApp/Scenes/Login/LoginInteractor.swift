//
//  LoginInteractor.swift
//  BankApp
//
//  Created by Joni Campos on 19/09/19.
//  Copyright (c) 2019 Joni Campos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

var usuarioID : Int = 0
var usuarioNome: String = ""
var usuarioConta: String = ""
var usuarioAgencia: String = ""
var usuarioSaldo : Double = 0.0


protocol LoginBusinessLogic
{
    func login(request: Login.Something.Request)
}

protocol LoginDataStore
{
    //var name: String { get set }
    var user: Login.Something.User! {get set}
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var user: Login.Something.User!
    
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    //Para fazer a chamada da API de login
    func login(request: Login.Something.Request)
    {
        worker = LoginWorker(LoginService())
        
        
        // importante esta chamada utiliza o completion handler para aguardar retornar da chamada da API
        // no retorno coloca os dados do login na estrutura User dentro do Login.Something.User
        //somente depois é que chama o presenter para chamar a tela do extrato
        // chama o Login Worker para chamar a funcao login e retornar o response da API
        worker?.login(request.user!, password: request.password!) { (response: Login.Something.User?) in
            self.user = response
            //guarde o valor do iD do  usuário para a chamada do extrato
            usuarioID = response!.userId
            usuarioNome = response!.name
            usuarioConta = response!.bankAccount
            usuarioSaldo = response!.balance
            usuarioAgencia = response!.agency
            
            self.presenter?.presentLogin()
        }
    }
}

